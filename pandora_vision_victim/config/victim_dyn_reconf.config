#!/usr/bin/env python
# Victim node dynamic configuration

PACKAGE = 'pandora_vision_victim'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Example : gen.add("int_param", int_t, 0,    "An In.....", 50, 0,  100)
#                    name        type   level  description  def min max

#-------------------------- show the depth image -------------------------------

gen.add("rgb_vj_weight", double_t, 0,"", 0.0, 0.0, 1.0)
gen.add("depth_vj_weight", double_t, 0,"", 0.0, 0.0, 1.0)
gen.add("rgb_svm_weight", double_t, 0,"", 0.3, 0.0, 1.0)
gen.add("depth_svm_weight", double_t, 0,"", 1.0, 0.0, 1.0)


gen.add("debug_img", bool_t, 0, "A boolean parameter for Visualization", False)
gen.add("debug_img_publisher", bool_t, 0, 
  "A boolean parameter for publishing Visualization", True)
  
gen.add("rgb_svm_prob_scaling", double_t, 0,"", 4.7, 0.0, 10.0)
gen.add("rgb_svm_prob_translation", double_t, 0,"", 1.0, 0.0, 10.0)
gen.add("depth_svm_prob_scaling", double_t, 0,"", 0.5, 0.0, 10.0)
gen.add("depth_svm_prob_translation", double_t, 0,"", 7.0, 0.0, 10.0)


#-------------------------- training subsystem -------------------------------

gen.add("numOfPositiveSamples", int_t, 0,"", 1638, 10, 50000)
gen.add("numOfNegativeSamples", int_t, 0,"", 3012, 10, 50000)
gen.add("numOfTestPositiveSamples", int_t, 0,"", 200, 5, 1000)
gen.add("numOfTestNegativeSamples", int_t, 0,"", 200, 5, 1000)

exit(gen.generate(PACKAGE, "victim_node", "victim_dyn_reconf"))
