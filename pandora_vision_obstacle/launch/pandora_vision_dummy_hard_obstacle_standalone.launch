<launch>
  <arg name="namespace" default="/pandora_vision/pandora_vision_obstacle" />
  <include file="$(find state_manager)/launch/stateManager.launch" />
  <include file="$(find pandora_vision_obstacle)/launch/pandora_vision_hard_obstacle.launch"
      ns="$(arg namespace)" />
  <group if="$(arg openni2)">
    <include file="$(find openni2_launch)/launch/openni2.launch" >
      <arg name="camera" value="kinect"/>
      <arg name="depth_registration" value="true" />
      <arg name="publish_tf" value="false" />
    </include>
  </group>

  <param name="/kinect_rgb_optical_frame/hfov" value="58.0" />
  <param name="/kinect_rgb_optical_frame/vfov" value="45.0" />

  <node pkg="tf" type="static_transform_publisher" name="world2map" args="0 0 0 0 0 0  world map 100" />
  <node pkg="tf" type="static_transform_publisher" name="map2base_footprint" args="0 0 0 0 0 0  map base_footprint 100" />
  <node pkg="tf" type="static_transform_publisher" name="base_footprint2kinect" args="0 0 0 0 0 0  base_footprint kinect_rgb_frame 100" />
  <node pkg="tf" type="static_transform_publisher" name="kinect2rgb_optical" args="0 0 0 -1.5708 0 -1.5708  kinect_rgb_frame kinect_rgb_optical_frame 100" />

  <!-- <include file="$(find pandora_robots_description)/gio/launch/gio_description.launch" /> -->
</launch>
