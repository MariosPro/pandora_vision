#!/usr/bin/env python
# Hard Obstacle configuration

PACKAGE = 'pandora_vision_obstacle'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Example : gen.add("int_param", int_t, 0,     "....",      50,  0,   100)
#                   name         type   level  description  def  min  max

# --------------------------- Edge Detection Method ---------------------------
dirm = gen.enum([
  gen.const("Canny_edge_detector", int_t, 0, ""),
  gen.const("Scharr_edge_detector", int_t, 1, ""),
  gen.const("Sobel_edge_detector", int_t, 2, "")], "")

gen.add("edge_detection_method", int_t, 0, "", 0, 0, 2, edit_method=dirm)

# ---------------------------- Canny parameters -------------------------------
gen.add("canny_kernel_size", int_t, 0, "", 3, 0, 10)
gen.add("canny_low_threshold", int_t, 0, "", 10, 1, 255)
gen.add("canny_blur_noise_kernel_size", int_t, 0, "", 3, 1, 10)

# ---------------------------- Threshold Parameters ---------------------------
gen.add("edges_threshold", int_t, 0, "", 30, 0, 255)

gen.add("min_input_image_value", double_t, 0, "", -0.5, -1.5, 0.5)

# ---------------------------- Debug Show Parameters --------------------------
gen.add("show_input_image", bool_t, 0, "", False)
gen.add("show_edges_image", bool_t, 0, "", False)
gen.add("show_edges_thresholded_image", bool_t, 0, "", False)
gen.add("show_edges_and_unknown_image", bool_t, 0, "", False)
gen.add("show_unknown_probabilities", bool_t, 0, "", False)
gen.add("show_new_map_image", bool_t, 0, "", False)
gen.add("edge_detection_enabled", bool_t, 0, "", False)
gen.add("enable_traversability_mask", bool_t, 0, "", False)
gen.add("enable_edge_traversability_mask", bool_t, 0, "", True)
gen.add("display_traversability_map", bool_t, 0, "", False)

# -------------------------- Edge Traversability Params -----------------------
gen.add("elevation_difference_low_free_threshold", double_t, 0,
        "Threshold on the elevation difference below which an area is free",
        0.1, 0.0, 0.5)
gen.add("elevation_difference_low_occupied_threshold", double_t, 0,
        "Threshold on the elevation difference below which an area is occupied",
        0.14, 0.0, 0.5)
gen.add("elevation_difference_high_free_threshold", double_t, 0,
        "Threshold on the elevation difference below which an area is free",
        0.19, 0.0, 0.5)
gen.add("elevation_difference_high_occupied_threshold", double_t, 0,
        "Threshold on the elevation difference below which an area is occupied",
        0.23, 0.0, 0.5)
gen.add("inflation_radius", double_t, 0,
        "The radius of the circle inside which an occupied area is shrinkened",
        0.4, 0.0, 1.0)

exit(gen.generate(PACKAGE, "hard_obstacle_node", "hard_obstacle_cfg"))
